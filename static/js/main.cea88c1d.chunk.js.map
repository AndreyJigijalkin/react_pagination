{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","onPreviousPage","onNextPage","totalPages","Math","ceil","handleSetPage","event","preventDefault","page","Number","currentTarget","dataset","className","classNames","disabled","href","onClick","map","active","items","App","useState","setItemsPerPage","setPage","start","end","min","length","id","onChange","target","value","htmlFor","newPage","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCMIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,eACAC,EACI,EADJA,WAEMC,EAAaC,KAAKC,KAAKR,EAAQC,GAE/BQ,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAOC,OAAOH,EAAMI,cAAcC,QAAQb,aAE5CU,IAASV,GAIbC,EAAaS,IAGf,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YAAa,CAAEC,SAA0B,IAAhBhB,IAF7B,SAKE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBjB,EACfkB,QAAShB,EALX,oBAUDX,EAAW,EAAGa,GAAYe,KAAI,SAACT,GAAD,OAC7B,oBAAII,UAAWC,IACb,YAAa,CAAEK,OAAQV,IAASV,IADlC,SAIE,mBACE,UAAQ,WACRc,UAAU,YACV,oBAAmBJ,EACnBO,KAAI,WAAMP,GACVQ,QAASX,EALX,SAOGG,SAIP,oBACEI,UAAWC,IACT,YAAa,CAAEC,SAAUhB,IAAgBI,IAF7C,SAKE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAAejB,IAAgBI,EAC/Bc,QAASf,EALX,wBCnEFkB,EAAQ9B,EAAW,EAAG,IACzB4B,KAAI,SAAAxB,GAAC,qBAAYA,MAEP2B,EAAgB,WAC3B,MAAmCC,mBAAS,GAA5C,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAwBD,mBAAS,GAAjC,mBAAOb,EAAP,KAAae,EAAb,KAEMC,GAAShB,EAAO,GAAKX,EAAU,EAC/B4B,EAAMtB,KAAKuB,IAAIlB,EAAOX,EAASsB,EAAMQ,QACrCzB,EAAaC,KAAKC,KAAKe,EAAMQ,OAAS9B,GAkB5C,OACE,sBAAKe,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWJ,EADX,mBAC0BgB,EAD1B,cACqCC,EADrC,eAC+CN,EAAMQ,OADrD,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,SAAU,SAAAvB,GACRgB,GAAiBhB,EAAMwB,OAAOC,OAC9BR,EAAQ,IAEVQ,MAAOlC,EART,UAUE,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEhB,MAAOuB,EAAMQ,OACb9B,QAASA,EACTC,YAAaU,EACbT,aArDmB,SAACkC,GACxBV,EAAQU,IAqDJjC,eAlDqB,WACzBuB,EAAQf,EAAO,EACXA,EAAO,EACP,IAgDAP,WA7CiB,WACrBsB,EAAQf,EAAON,EACXM,EAAO,EACPN,MA4CF,6BACGiB,EAAMe,MAAMV,EAAQ,EAAGC,GAAKR,KAAI,SAAAkB,GAAI,OACnC,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cea88c1d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { MouseEventHandler } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  onPreviousPage: MouseEventHandler<HTMLAnchorElement>\n  onNextPage: MouseEventHandler<HTMLAnchorElement>\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  onPreviousPage,\n  onNextPage,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handleSetPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    const page = Number(event.currentTarget.dataset.currentPage);\n\n    if (page === currentPage) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={onPreviousPage}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, totalPages).map((page) => (\n        <li className={classNames(\n          'page-item', { active: page === currentPage },\n        )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            data-current-page={page}\n            href={`#${page}`}\n            onClick={handleSetPage}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item', { disabled: currentPage === totalPages },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={onNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setItemsPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const start = (page - 1) * perPage + 1;\n  const end = Math.min(page * perPage, items.length);\n  const totalPages = Math.ceil(items.length / perPage);\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handlePreviousPage = () => {\n    setPage(page > 1\n      ? page - 1\n      : 1);\n  };\n\n  const handleNextPage = () => {\n    setPage(page < totalPages\n      ? page + 1\n      : totalPages);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${start} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={event => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={handlePageChange}\n        onPreviousPage={handlePreviousPage}\n        onNextPage={handleNextPage}\n      />\n      <ul>\n        {items.slice(start - 1, end).map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}